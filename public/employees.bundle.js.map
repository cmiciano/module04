{"version":3,"file":"employees.bundle.js","mappings":"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","sources":["webpack://module01/webpack/runtime/chunk loaded","webpack://module01/./src/EmployeeFilter.jsx","webpack://module01/./src/EmployeeAdd.jsx","webpack://module01/./src/EmployeeList.jsx","webpack://module01/./src/employees.jsx","webpack://module01/webpack/bootstrap","webpack://module01/webpack/runtime/hasOwnProperty shorthand","webpack://module01/webpack/runtime/jsonp chunk loading","webpack://module01/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","\nimport React from 'react'\n\n// M4\nexport default class EmployeeFilter extends React.Component {\n\trender() {\n\t\treturn(<div>This is a placeholder for the employee filter.</div>)\n    }\n\t\n}\n","import React from 'react'\n\n\nexport default class EmployeeAdd extends React.Component {\n    constructor() {\n        super()\n        this.handleSubmit = this.handleSubmit.bind(this)\n        /*\n        setTimeout(() => {\n            this.props.createEmployee(sampleEmployee)\n        }, 2000\n\n        )\n        this.state = { employees: [] } //using hard-coded array to initialize state\n        */\n\n    }\n\n    handleSubmit(e) {\n        e.preventDefault()\n        const form = document.forms.employeeAdd\n        const employee = {\n            name: form.name.value,\n            extension: form.ext.value,\n            email: form.email.value,\n            title: form.title.value,\n   \n\n        }\n        this.props.createEmployee(employee)\n        form.name.value = ''\n        form.ext.value = ''\n        form.email.value = ''\n        form.title.value = ''\n\n\n    }\n\n\trender() {\n        return(\n            <form name=\"employeeAdd\" onSubmit={this.handleSubmit}>\n                Name: <input type=\"text\" name=\"name\" /><br/>\n                Extension: <input type=\"text\" name=\"ext\" maxLength={4} /><br/>\n                Email: <input type=\"text\" name=\"email\" /><br/>\n                Title: <input type=\"text\" name=\"title\" /><br/>\n                <button>Add</button>\n\n\n            </form>\n        )\n\t\t//return(<div>This is a placeholder for the employee add form.</div>)\n    }\n\t\n}\n","\nimport React from 'react'\n\n\nimport EmployeeFilter from \"./EmployeeFilter.jsx\"\nimport EmployeeAdd  from \"./EmployeeAdd.jsx\"\n\nfunction EmployeeRow(props) {\n    //const employee = props.employee\n    //const style = this.props.rowStyle // property passed onto built-in react compoment\n    // need toDateString for it to work\n\n    function onDeleteClick() {\n        props.deleteEmployee(props.employee._id)\n    }\n\n    return(\n        <tr>\n            <td>{props.employee.name}</td>\n            <td>{props.employee.extension}</td>\n            <td>{props.employee.email}</td>\n            <td>{props.employee.title}</td>\n            <td>{props.employee.dateHired.toDateString()}</td> \n            <td>{props.employee.currentlyEmployed ? 'Yes' : 'No'}</td>\n            <td><button onClick={onDeleteClick}>DELETE</button></td>\n        </tr>\n    )\n\n\n\t\n}\n\n\n// M5 and M6 and M7\nfunction EmployeeTable(props) {\n\n    // maps employee element in array to create \n    // multiple employee rows\n    // creates properties \"key\" taking in employee.id and \"employee\"\n    // taking in whole element in the array {id, name, ext etc}\n    const employeeRows = props.employees.map(employee =>\n        <EmployeeRow \n        key={employee._id} \n        employee={employee}\n        deleteEmployee={props.deleteEmployee}/> )\n    // define style here\n    // basically make a box around each cell in table\n\n    \n    return( //two braces since you're specifiying in-line style, also have to use \"800px\" instead of just number 800\n        <table class=\"bordered-table\">\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Extension</th>\n                    <th>Email</th>\n                    <th>Title</th>\n                    <th>Date Hired</th>\n                    <th>Is Employed</th>\n                    <th></th>\n\n                </tr>\n            </thead> \n            <tbody>\n                {employeeRows}\n            </tbody>\n        </table>\n\n    )\n    \n}\n\n\n\n\n\n// gathering all components within employeelist\nexport default class EmployeeList extends React.Component {\n    constructor() {\n        super()\n        this.state = { employees: [] } //using hard-coded array to initialize state\n        this.createEmployee = this.createEmployee.bind(this)\n        this.deleteEmployee = this.deleteEmployee.bind(this)\n\n    }\n\n    componentDidMount() {\n        this.loadData() //simulates asynchronous call, load employee data from state\n    }\n    \n\n    loadData() {\n        fetch('/api/employees')\n         .then(response => response.json())\n         .then(data => {\n            console.log('Total count of employees:', data.count)\n            data.employees.forEach( employee => {\n                employee.dateHired = new Date(employee.dateHired)\n            })\n            this.setState({ employees: data.employees})\n         })\n        .catch(err => {console.log(err)})\n        /*\n        setTimeout(() => {\n            this.setState({ employees: initialEmployees })\n        }, 500 )\n        */\n    }\n\n    createEmployee(employee) {\n        fetch('/api/employees', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(employee),\n        })\n        .then(response => response.json())\n        .then(newEmployee => {\n            newEmployee.employee.dateHired = new Date(newEmployee.employee.dateHired)\n            const newEmployees = this.state.employees.concat(newEmployee.employee)\n            this.setState({ employees: newEmployees })\n            console.log('Total count of employees:', newEmployees.length)  // modifying the state after adding to database\n\n        })\n        .catch(err => {console.log(err)} )\n\n    }\n\n\n    deleteEmployee(id) {\n        fetch(`/api/employees/${id}`, { method: 'DELETE' })\n        .then(response => {\n            if (!response.ok) {\n                console.log('Failed to delete employee.')\n            } else {\n                this.loadData()\n            }\n        })\n    }\n    // passing employees to EmployeeTable via prop\n    // passing method \n\trender() { //have to have render() function within a class\n\t\treturn(   \n            <React.Fragment>\n                    <h1>Employee Management Application</h1>\n                    <EmployeeFilter />\n                    <hr /> \n                    <EmployeeTable employees={this.state.employees} deleteEmployee={this.deleteEmployee} /> \n                    <hr />\n                    <EmployeeAdd createEmployee={this.createEmployee} />\n            </React.Fragment>\n\n        )\n  }\n}","\n\n// if you get an error try\nimport React from 'react'\nimport { createRoot } from 'react-dom/client'\nimport EmployeeList from './EmployeeList.jsx'\n\nconst root = createRoot(document.getElementById('content'))\nroot.render(\n    <React.StrictMode>\n        <EmployeeList />\n    </React.StrictMode>\n)\n\n/*\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n//import EmployeeAdd from './EmployeeAdd.jsx'\nimport EmployeeList from './EmployeeList.jsx'\n\n\nconst contentNode = document.getElementById('content')\nReactDOM.render(\n    <div>\n     <EmployeeList />\n    </div>,\n  //what you want to render\n    contentNode // where you want to render the element to\n) //rendering component to contentNode element\n\n\n*/\n\n\n/*\n// M5 and M6 and M7\nfunction EmployeeTable(props) {\n\n    // maps employee element in array to create \n    // multiple employee rows\n    // creates properties \"key\" taking in employee.id and \"employee\"\n    // taking in whole element in the array {id, name, ext etc}\n    const employeeRows = props.employees.map(employee =>\n        <EmployeeRow \n        key={employee._id} \n        employee={employee}\n        deleteEmployee={props.deleteEmployee}/> )\n    // define style here\n    // basically make a box around each cell in table\n\n    \n    return( //two braces since you're specifiying in-line style, also have to use \"800px\" instead of just number 800\n        <table class=\"bordered-table\">\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Extension</th>\n                    <th>Email</th>\n                    <th>Title</th>\n                    <th>Date Hired</th>\n                    <th>Is Employed</th>\n                    <th></th>\n\n                </tr>\n            </thead> \n            <tbody>\n                {employeeRows}\n            </tbody>\n        </table>\n\n    )\n    \n}\n\n*/\n\n// M8\n// creating an array of employees\n\n/*\nconst initialEmployees = [\n    {   id: 1,\n        name: 'Zak Ruvalcaba',\n        ext: 1224,\n        email: 'zak@vectacorp.com',\n        title: 'CEO',\n        dateHired: new Date('2018-08-15'),\n        isEmployed: true,\n    },\n    {\n        id: 2, \n        name: 'yuh Ruvalcaba',\n        ext: 1234,\n        email: 'zaak@vectacorp.com',\n        title: 'CFO',\n        dateHired: new Date('2019-08-15'),\n        isEmployed: true,\n    },\n]\n\nconst sampleEmployee = {\n    name: 'Holly Unlikely',\n    ext: 1126,\n    email: 'sally@vectacorp.com',\n    title: 'Director of Sales',\n    dateHired: new Date('2015-01-03'),\n    isEmployed: true,\n\n}\n\n*/\n\n// M4\n\n/*\nclass EmployeeFilter extends React.Component {\n\trender() {\n\t\treturn(<div>This is a placeholder for the employee filter.</div>)\n    }\n\t\n}\n*/\n\n\n/*\n\n// class HTML attribute has to be called class_name in JSX since class is a specific keyword\n// hyphens become camelcase in JSX max-hyphen-length ->  maxHyphenLength\n\nfunction EmployeeRow(props) {\n    //const employee = props.employee\n    //const style = this.props.rowStyle // property passed onto built-in react compoment\n    // need toDateString for it to work\n\n    function onDeleteClick() {\n        props.deleteEmployee(props.employee._id)\n    }\n\n    return(\n        <tr>\n            <td>{props.employee.name}</td>\n            <td>{props.employee.extension}</td>\n            <td>{props.employee.email}</td>\n            <td>{props.employee.title}</td>\n            <td>{props.employee.dateHired.toDateString()}</td> \n            <td>{props.employee.currentlyEmployed ? 'Yes' : 'No'}</td>\n            <td><button onClick={onDeleteClick}>DELETE</button></td>\n        </tr>\n    )\n\n\n\t\n}\n\n*/\n\n// M3\n\n// gathering all components within employeelist\n/*\nclass EmployeeList extends React.Component {\n    constructor() {\n        super()\n        this.state = { employees: [] } //using hard-coded array to initialize state\n        this.createEmployee = this.createEmployee.bind(this)\n        this.deleteEmployee = this.deleteEmployee.bind(this)\n\n    }\n\n    componentDidMount() {\n        this.loadData() //simulates asynchronous call, load employee data from state\n    }\n    \n\n    loadData() {\n        fetch('/api/employees')\n         .then(response => response.json())\n         .then(data => {\n            console.log('Total count of employees:', data.count)\n            data.employees.forEach( employee => {\n                employee.dateHired = new Date(employee.dateHired)\n            })\n            this.setState({ employees: data.employees})\n         })\n        .catch(err => {console.log(err)})\n        \n       \n    }\n\n    createEmployee(employee) {\n        fetch('/api/employees', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(employee),\n        })\n        .then(response => response.json())\n        .then(newEmployee => {\n            newEmployee.employee.dateHired = new Date(newEmployee.employee.dateHired)\n            const newEmployees = this.state.employees.concat(newEmployee.employee)\n            this.setState({ employees: newEmployees })\n            console.log('Total count of employees:', newEmployees.length)  // modifying the state after adding to database\n\n        })\n        .catch(err => {console.log(err)} )\n\n    }\n\n\n    deleteEmployee(id) {\n        fetch(`/api/employees/${id}`, { method: 'DELETE' })\n        .then(response => {\n            if (!response.ok) {\n                console.log('Failed to delete employee.')\n            } else {\n                this.loadData()\n            }\n        })\n    }\n    // passing employees to EmployeeTable via prop\n    // passing method \n\trender() { //have to have render() function within a class\n\t\treturn(   \n            <React.Fragment>\n                    <h1>Employee Management Application</h1>\n                    <EmployeeFilter />\n                    <hr /> \n                    <EmployeeTable employees={this.state.employees} deleteEmployee={this.deleteEmployee} /> \n                    <hr />\n                    <EmployeeAdd createEmployee={this.createEmployee} />\n            </React.Fragment>\n\n        )\n  }\n}\n\n\n\n\n/*\n// M2\nfunction Welcome(props) {\n    return <h1>Hello, {props.name} </h1>\n}\n// <Welcome name=\"Zak Ruvalcaba\" />\n// one property called name\nReactDOM.render(<Welcome name=\"Zak Ruvalcaba\" />, document.getElementById('content'))\n*/\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t834: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmodule01\"] = self[\"webpackChunkmodule01\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [121], () => (__webpack_require__(418)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","EmployeeFilter","_React$Component","_classCallCheck","_callSuper","arguments","_inherits","key","value","React","EmployeeAdd","_this","handleSubmit","bind","e","preventDefault","form","document","forms","employeeAdd","employee","name","extension","ext","email","title","this","props","createEmployee","onSubmit","type","maxLength","EmployeeRow","dateHired","toDateString","currentlyEmployed","onClick","deleteEmployee","_id","EmployeeTable","employeeRows","employees","map","class","EmployeeList","state","loadData","_this2","fetch","then","response","json","data","console","log","count","forEach","Date","setState","err","_this3","method","headers","body","JSON","stringify","newEmployee","newEmployees","concat","length","id","_this4","ok","createRoot","getElementById","render","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","o","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","push","__webpack_exports__"],"sourceRoot":""}